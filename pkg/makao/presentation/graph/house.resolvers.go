package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"

	"github.com/oryx-systems/makao/pkg/makao/application/dto"
	"github.com/oryx-systems/makao/pkg/makao/domain"
	"github.com/oryx-systems/makao/pkg/makao/presentation/graph/generated"
)

// CreateHouse is the resolver for the createHouse field.
func (r *mutationResolver) CreateHouse(ctx context.Context, input dto.HouseInput) (bool, error) {
	r.checkPreconditions()

	return r.makao.House.CreateHouse(ctx, &input)
}

// GetHouseByHouseNumber is the resolver for the getHouseByHouseNumber field.
func (r *queryResolver) GetHouseByHouseNumber(ctx context.Context, houseNumber string) (*domain.House, error) {
	r.checkPreconditions()

	return r.makao.House.GetHouseByNumber(ctx, houseNumber)
}

// GetUserHouses is the resolver for the getUserHouses field.
func (r *queryResolver) GetUserHouses(ctx context.Context, userID string) ([]*domain.House, error) {
	panic(fmt.Errorf("not implemented: GetUserHouses - getUserHouses"))
}

// ListHousesInResidence is the resolver for the listHousesInResidence field.
func (r *queryResolver) ListHousesInResidence(ctx context.Context, residenceID string) ([]*domain.House, error) {
	r.checkPreconditions()

	return r.makao.House.ListHousesInResidence(ctx, residenceID)
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
